"use strict";(self.webpackChunkOpenSign_Docs=self.webpackChunkOpenSign_Docs||[]).push([[5510],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(96540);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},55774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"self-host/guides/azure-vm-setup","title":"OpenSign Deployment Guide on Azure VM via command-line","description":"\ud83e\uddf1 Prerequisites","source":"@site/docs/self-host/guides/azure-vm-setup.md","sourceDirName":"self-host/guides","slug":"/self-host/guides/azure-vm-setup","permalink":"/docs/self-host/guides/azure-vm-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/opensignlabs/opensign/tree/feat-docs/docs/docs/self-host/guides/azure-vm-setup.md","tags":[],"version":"current","frontMatter":{"title":"OpenSign Deployment Guide on Azure VM via command-line"},"sidebar":"selfhostSidebar","previous":{"title":"Guides","permalink":"/docs/category/guides"},"next":{"title":"ENV variables which are used to setup OpenSign\u2122 with Docker on Localhost","permalink":"/docs/self-host/guides/env-variables"}}');var o=s(74848),i=s(28453);const t={title:"OpenSign Deployment Guide on Azure VM via command-line"},a="\ud83d\ude80 OpenSign Deployment Guide on Azure VM (Frontend + Backend + MongoDB + Caddy)",l={},d=[{value:"\ud83e\uddf1 Prerequisites",id:"-prerequisites",level:2},{value:"\ud83d\udd27 Step 1: Create an Azure VM",id:"-step-1-create-an-azure-vm",level:2},{value:"1.1 Create Resource Group",id:"11-create-resource-group",level:3},{value:"1.2 Create Ubuntu VM",id:"12-create-ubuntu-vm",level:3},{value:"1.3 Get VM IP",id:"13-get-vm-ip",level:3},{value:"\ud83d\udd10 Step 2: Open Required Ports",id:"-step-2-open-required-ports",level:2},{value:"2.1 Get NSG name",id:"21-get-nsg-name",level:3},{value:"2.2 Add inbound port rules",id:"22-add-inbound-port-rules",level:3},{value:"\ud83c\udf0d Step 3: Point Domain to VM",id:"-step-3-point-domain-to-vm",level:2},{value:"\ud83d\udce6 Step 4: SSH into the VM",id:"-step-4-ssh-into-the-vm",level:2},{value:"\ud83d\udc33 Step 5: Install Docker + Compose V2",id:"-step-5-install-docker--compose-v2",level:2},{value:"\ud83d\udcc1 Step 6: Set Up Project and Volumes",id:"-step-6-set-up-project-and-volumes",level:2},{value:"6.1 Create a working directory",id:"61-create-a-working-directory",level:3},{value:"6.2 Download files",id:"62-download-files",level:3},{value:"Make sure that you update the SMTP settings by editing the .env.prod file in order to receive emails.",id:"make-sure-that-you-update-the-smtp-settings-by-editing-the-envprod-file-in-order-to-receive-emails",level:2},{value:"\u2699\ufe0f Step 7: Start the Stack",id:"\ufe0f-step-7-start-the-stack",level:2},{value:"\u2705 Step 8: Verify Everything",id:"-step-8-verify-everything",level:2},{value:"\ud83d\udce6 Step 9: Auto-start on Reboot (optional)",id:"-step-9-auto-start-on-reboot-optional",level:2},{value:"\ud83d\udd04 Backups (optional)",id:"-backups-optional",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-opensign-deployment-guide-on-azure-vm-frontend--backend--mongodb--caddy",children:"\ud83d\ude80 OpenSign Deployment Guide on Azure VM (Frontend + Backend + MongoDB + Caddy)"})}),"\n",(0,o.jsx)(n.h2,{id:"-prerequisites",children:"\ud83e\uddf1 Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Azure CLI installed"}),"\n",(0,o.jsxs)(n.li,{children:["A domain you control (e.g., ",(0,o.jsx)(n.code,{children:"yourdomain.com"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Subdomain pointing to your VM (e.g., ",(0,o.jsx)(n.code,{children:"opensign.yourdomain.com"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"SSH access"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-1-create-an-azure-vm",children:"\ud83d\udd27 Step 1: Create an Azure VM"}),"\n",(0,o.jsx)(n.h3,{id:"11-create-resource-group",children:"1.1 Create Resource Group"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"az group create --name OpenSignRG --location eastus\n"})}),"\n",(0,o.jsx)(n.h3,{id:"12-create-ubuntu-vm",children:"1.2 Create Ubuntu VM"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"az vm create \\\n  --resource-group OpenSignRG \\\n  --name opensign-vm \\\n  --image Ubuntu2404 \\\n  --admin-username azureuser \\\n  --generate-ssh-keys \\\n  --size Standard_B1ms\n"})}),"\n",(0,o.jsx)(n.h3,{id:"13-get-vm-ip",children:"1.3 Get VM IP"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"az vm list-ip-addresses --name opensign-vm --resource-group OpenSignRG --output table\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-2-open-required-ports",children:"\ud83d\udd10 Step 2: Open Required Ports"}),"\n",(0,o.jsxs)(n.p,{children:["Azure\u2019s default port-opening approach conflicts if you use the same priorities. So instead, ",(0,o.jsx)(n.strong,{children:"add rules with increasing priorities"})," manually:"]}),"\n",(0,o.jsx)(n.h3,{id:"21-get-nsg-name",children:"2.1 Get NSG name"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'az network nsg list --resource-group OpenSignRG --query "[].name"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Assume it\u2019s ",(0,o.jsx)(n.code,{children:"opensign-vmNSG"}),". Then:"]}),"\n",(0,o.jsx)(n.h3,{id:"22-add-inbound-port-rules",children:"2.2 Add inbound port rules"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"az network nsg rule create \\\n  --resource-group OpenSignRG \\\n  --nsg-name opensign-vmNSG \\\n  --name Allow-HTTP \\\n  --priority 1001 \\\n  --direction Inbound \\\n  --protocol Tcp \\\n  --access Allow \\\n  --destination-port-ranges 80\n\naz network nsg rule create \\\n  --resource-group OpenSignRG \\\n  --nsg-name opensign-vmNSG \\\n  --name Allow-HTTPS \\\n  --priority 1002 \\\n  --direction Inbound \\\n  --protocol Tcp \\\n  --access Allow \\\n  --destination-port-ranges 443\n\naz network nsg rule create \\\n  --resource-group OpenSignRG \\\n  --nsg-name opensign-vmNSG \\\n  --name Allow-Caddy-Internal \\\n  --priority 1003 \\\n  --direction Inbound \\\n  --protocol Tcp \\\n  --access Allow \\\n  --destination-port-ranges 3001\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-3-point-domain-to-vm",children:"\ud83c\udf0d Step 3: Point Domain to VM"}),"\n",(0,o.jsx)(n.p,{children:"In your DNS provider (e.g., GoDaddy, Cloudflare):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Add an ",(0,o.jsx)(n.strong,{children:"A record"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Name: ",(0,o.jsx)(n.code,{children:"opensign"})]}),"\n",(0,o.jsxs)(n.li,{children:["Value: ",(0,o.jsx)(n.code,{children:"<your VM public IP>"})]}),"\n",(0,o.jsx)(n.li,{children:"TTL: 1 min or Auto"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Let it propagate (~5\u201310 mins)."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-4-ssh-into-the-vm",children:"\ud83d\udce6 Step 4: SSH into the VM"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ssh azureuser@<your-vm-ip>\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-5-install-docker--compose-v2",children:"\ud83d\udc33 Step 5: Install Docker + Compose V2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt install docker.io -y\n\n# Install Compose V2 (CLI plugin)\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n\n# Enable Docker\nsudo systemctl enable docker\n"})}),"\n",(0,o.jsx)(n.p,{children:"Verify:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose version\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-6-set-up-project-and-volumes",children:"\ud83d\udcc1 Step 6: Set Up Project and Volumes"}),"\n",(0,o.jsx)(n.h3,{id:"61-create-a-working-directory",children:"6.1 Create a working directory"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir opensign && cd opensign\n"})}),"\n",(0,o.jsx)(n.h3,{id:"62-download-files",children:"6.2 Download files"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export HOST_URL=https://opensign.yourdomain.com\n\ncurl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml\ncurl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile\ncurl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev\nmv .env.local_dev .env.prod\n"})}),"\n",(0,o.jsx)(n.h2,{id:"make-sure-that-you-update-the-smtp-settings-by-editing-the-envprod-file-in-order-to-receive-emails",children:"Make sure that you update the SMTP settings by editing the .env.prod file in order to receive emails."}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-step-7-start-the-stack",children:"\u2699\ufe0f Step 7: Start the Stack"}),"\n",(0,o.jsx)(n.p,{children:"Now boot the containers using Compose V2:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose up -d --force-recreate\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-8-verify-everything",children:"\u2705 Step 8: Verify Everything"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"https://opensign.yourdomain.com"})," loads the app with HTTPS"]}),"\n",(0,o.jsx)(n.li,{children:"Caddy fetched SSL certs automatically"}),"\n",(0,o.jsxs)(n.li,{children:["Backend routes work at ",(0,o.jsx)(n.code,{children:"/api/*"})]}),"\n",(0,o.jsx)(n.li,{children:"MongoDB persists data"}),"\n",(0,o.jsxs)(n.li,{children:["Uploaded files persist via ",(0,o.jsx)(n.code,{children:"opensign-files"})," volume"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Test:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec -it OpenSignServer-container ls /usr/src/app/files\ndocker volume inspect opensign-files\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-step-9-auto-start-on-reboot-optional",children:"\ud83d\udce6 Step 9: Auto-start on Reboot (optional)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"crontab -e\n"})}),"\n",(0,o.jsx)(n.p,{children:"Add:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"@reboot cd /home/azureuser/opensign && docker compose up -d\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-backups-optional",children:"\ud83d\udd04 Backups (optional)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Backup MongoDB volume\ndocker run --rm -v opensign_data-volume:/data -v $(pwd):/backup ubuntu tar czvf /backup/mongo-backup.tar.gz /data\n\n# Backup OpenSign files\ndocker run --rm -v opensign_opensign-files:/data -v $(pwd):/backup ubuntu tar czvf /backup/files-backup.tar.gz /data\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);